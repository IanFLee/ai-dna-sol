import tkinter as tk
from tkinter import ttk
import scipy.signal as signal
from scipy.io.wavfile import write
import numpy as np
import os

# Set up the Tkinter window
window = tk.Tk()
window.title("Audio Synthesizer")

# Create the play button
play_button = ttk.Button(window, text="Play")
play_button.pack()

# Create the waveform selection dropdown
waveform_label = ttk.Label(window, text="Waveform:")
waveform_label.pack()
waveform_var = tk.StringVar()
waveform_dropdown = ttk.OptionMenu(window, waveform_var, "Sine", "Triangle", "Sawtooth", "Square")
waveform_dropdown.pack()

# Function to generate the audio waveform
def generate_waveform(waveform, duration, frequency, sample_rate):
  # Generate the time points for the waveform
  t = np.linspace(0, duration, duration * sample_rate, False)

  # Generate the waveform samples
  if waveform == "Sine":
    samples = np.sin(2 * np.pi * frequency * t)
  elif waveform == "Triangle":
    samples = signal.sawtooth(2 * np.pi * frequency * t, 0.5)
  elif waveform == "Sawtooth":
    samples = signal.sawtooth(2 * np.pi * frequency * t)
  elif waveform == "Square":
    samples = signal.square(2 * np.pi * frequency * t)

  # Scale the samples to the desired range
  samples *= 32767
  samples = np.int16(samples)

  return samples

# Function to play the audio when the play button is clicked
def play_audio():
  # Get the selected waveform and generate the waveform samples
  waveform = waveform_var.get()
  samples = generate_waveform(waveform, 1, 440, 44100)

  # Write the waveform to a WAV file and play it
  write("temp.wav", 44100, samples)
  os.system("aplay temp.wav")

# Set the play button to call the play_audio function when clicked
play_button.config(command=play_audio)

# Run the Tkinter event loop
window.mainloop()
